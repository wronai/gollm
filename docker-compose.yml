
version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11435:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 35
    networks:
      - gollm_network

  testenv:
    build:
      context: .
      dockerfile: docker/testenv/Dockerfile
    container_name: testenv
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - .:/app
      - gollm-cache:/root/.cache/gollm
    environment:
      - OLLAMA_HOST=http://ollama:11434
    networks:
      - gollm_network
    command: >
      sh -c "echo 'Waiting for Ollama...' &&
             until curl -s http://ollama:11434/api/tags >/dev/null; do
               echo 'Waiting for Ollama...' && sleep 1;
             done &&
             echo 'Ollama is ready! Pulling tinyllama model...' &&
             curl -X POST http://ollama:11434/api/pull -d '{"name": "tinyllama:latest"}' &&
             echo 'Running tests with 30s timeout...' &&
             pytest tests/ -v --timeout=30 --cov=src/gollm"

  dev:
    build:
      context: .
      dockerfile: docker/testenv/Dockerfile
    container_name: dev
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - .:/app
      - gollm-cache:/root/.cache/gollm
    environment:
      - OLLAMA_HOST=http://ollama:11434
    networks:
      - gollm_network
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true

networks:
  gollm_network:
    driver: bridge

volumes:
  ollama_data:
  gollm-cache:
