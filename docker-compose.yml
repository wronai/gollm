
version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11435:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=/root/.ollama/models  # Explicitly set models directory
    volumes:
      - ollama_data:/root/.ollama  # This will persist models between container restarts
    # Simple health check that just checks if the container is running
    healthcheck:
      test: ["CMD", "echo", "ok"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - gollm_network
    # Don't automatically pull models on start
    entrypoint: ["sh", "-c", "ollama serve &
             if [ ! -f /root/.ollama/models/manifests/registry.ollama.ai/library/tinyllama/latest ]; then
               echo 'Pulling tinyllama model...' && \
               ollama pull tinyllama;
             fi && \
             tail -f /dev/null"]

  testenv:
    build:
      context: .
      dockerfile: docker/testenv/Dockerfile
    container_name: testenv
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - .:/app
      - gollm-cache:/root/.cache/gollm
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - GOLLM_MODEL=tinyllama:latest
    networks:
      - gollm_network
    command: >
      sh -c "echo 'Waiting for Ollama to be ready...' &&
             until curl -s http://ollama:11434/api/tags >/dev/null; do
               echo 'Waiting for Ollama...' && sleep 1;
             done &&
             echo 'Running tests with tinyllama model (30s timeout)...' &&
             pytest tests/ -v --timeout=30 --cov=src/gollm"

  dev:
    build:
      context: .
      dockerfile: docker/testenv/Dockerfile
    container_name: dev
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - .:/app
      - gollm-cache:/root/.cache/gollm
    environment:
      - OLLAMA_HOST=http://ollama:11434
    networks:
      - gollm_network
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true

networks:
  gollm_network:
    driver: bridge

volumes:
  ollama_data:
  gollm-cache:
